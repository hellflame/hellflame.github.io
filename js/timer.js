const valineAPI=(e,t)=>{if(!window.AV_INITED)try{AV.init(e,t),window.AV_INITED=!0}catch(e){}return{isExist:e=>{e=e||getRealPath();let t=new AV.Query("Timer");return new Promise((n,i)=>{t.equalTo("identity",e),t.find().then(e=>{n(e.length>0)},e=>i(e))})},_get:e=>{let t=null;if(e&&e instanceof Array){let n=[];for(let t=0;t<e.length;++t)n[t]=new AV.Query("Timer"),n[t].equalTo("identity",e[t]);t=AV.Query.or.apply(null,n)}else e=e||getRealPath(),(t=new AV.Query("Timer")).equalTo("identity",e);return new Promise((e,n)=>{t.find().then(t=>e(t)).catch(e=>n(e))})},update:e=>(e=e||getRealPath(),new Promise((t,n)=>{let i=new AV.Query("Timer");i.equalTo("identity",e),i.find().then(e=>(e.forEach(e=>{e.set("times",e.attributes.times+1)}),AV.Object.saveAll(e))).then(e=>t(!0),e=>n(e))})),create:e=>(e=e||getRealPath(),new Promise((t,n)=>{let i=new(AV.Object.extend("Timer"));i.set("times",1),i.set("identity",e),i.save().then(e=>t(!0),e=>n(e))}))}};